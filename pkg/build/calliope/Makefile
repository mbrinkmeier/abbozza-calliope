# This file was automagically generated by mbed.org. For more information,
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := build
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate
###############################################################################
# Project settings

PROJECT := abbozza


# Project settings
###############################################################################
# Objects and Paths

OBJECTS += source/abbozza.o

OBJPREFIX = yotta_modules

SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/assert.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/error.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/board.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/gpio.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/lp_ticker_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/mbed_interface.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/pinmap_common.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/rtc_time.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/semihost_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/ticker_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/us_ticker_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/wait_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Serial.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/board.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/BusIn.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/BusInOut.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/BusOut.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/CallChain.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/CAN.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Ethernet.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/FileBase.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/FileLike.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/FilePath.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/FileSystemLike.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/I2C.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/I2CSlave.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/InterruptIn.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/InterruptManager.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/LocalFileSystem.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/RawSerial.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/retarget.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/SerialBase.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Serial.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/SPI.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/SPISlave.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Stream.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Ticker.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Timeout.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/Timer.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/common/TimerEvent.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/analogin_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/gpio_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/gpio_irq_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/i2c_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/pinmap.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/port_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/pwmout_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/serial_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/spi_api.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/twi_master.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/us_ticker.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/cmsis/TARGET_NORDIC/TARGET_MCU_NRF51822/system_nrf51.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/cmsis/TARGET_NORDIC/TARGET_MCU_NRF51822/cmsis_nvic.o
SYS_OBJECTS += $(OBJPREFIX)/mbed-classic/targets/cmsis/TARGET_NORDIC/TARGET_MCU_NRF51822/TOOLCHAIN_GCC_ARM/startup_NRF51822.o
SYS_OBJECTS += $(OBJPREFIX)/ble/source/GapScanningParams.o
SYS_OBJECTS += $(OBJPREFIX)/ble/source/services/UARTService.o
SYS_OBJECTS += $(OBJPREFIX)/ble/source/services/DFUService.o
SYS_OBJECTS += $(OBJPREFIX)/ble/source/services/URIBeaconConfigService.o
SYS_OBJECTS += $(OBJPREFIX)/ble/source/DiscoveredCharacteristic.o
SYS_OBJECTS += $(OBJPREFIX)/ble/source/BLE.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xGattClient.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/btle/custom/custom_helper.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/btle/btle_discovery.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/btle/btle.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/btle/btle_gap.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/btle/btle_security.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/btle/btle_advertising.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xCharacteristicDescriptorDiscoverer.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xDiscoveredCharacteristic.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xGap.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xServiceDiscovery.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xn.o
SYS_OBJECTS += $(OBJPREFIX)/ble-nrf51822/source/nRF5xGattServer.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/ble_radio_notification/ble_radio_notification.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/device_manager/device_manager_peripheral.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/peer_database.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/pm_mutex.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/peer_id.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/peer_data_storage.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/id_manager.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/peer_data.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/pm_buffer.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/common/ble_conn_state.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/common/ble_advdata.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/common/ble_conn_params.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/common/ble_srv_common.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/ble_services/ble_dfu/ble_dfu.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/hal/nrf_nvmc.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/hal/nrf_ecb.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/delay/nrf_delay.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/ble_flash/ble_flash.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/pstorage/pstorage.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/softdevice/common/softdevice_handler/softdevice_handler_appsh.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/softdevice/common/softdevice_handler/softdevice_handler.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/crc16/crc16.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/fstorage/fstorage_nosd.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/fstorage/fstorage.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/scheduler/app_scheduler.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/bootloader_dfu/dfu_init_template.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/bootloader_dfu/bootloader_util.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/bootloader_dfu/dfu_app_handler.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/hci/hci_mem_pool.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/util/nrf_assert.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/util/app_error.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/util/app_util_platform.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/util/sdk_mapped_flags.o
SYS_OBJECTS += $(OBJPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/fds/fds.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/types/MicroBitImage.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/types/Matrix4.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/types/ManagedString.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/types/RefCounted.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/types/MicroBitEvent.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/types/PacketBuffer.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitFiber.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitListener.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MemberFunctionCallback.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitHeapAllocator.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitFont.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitDevice.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitCompat.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/core/MicroBitSystemTimer.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/CalliopeRGB.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/TimedInterruptIn.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitAccelerometer.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitCompassCalibrator.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitStorage.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitFileSystem.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitPin.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitButton.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitLightSensor.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitRadioDatagram.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/CalliopeSoundMotor.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitFile.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitI2C.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitAccelerometer-bmx.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitFlash.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitQuadratureDecoder.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitMultiButton.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitSerial.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitIO.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitDisplay.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitCompass.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitMessageBus.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitRadioEvent.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitRadio.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitThermometer.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/MicroBitCompass-bmx.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/drivers/DynamicPwm.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitLEDService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitMagnetometerService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitButtonService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitEventService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitDFUService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitEddystone.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitBLEManager.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitAccelerometerService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitIOPinService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitTemperatureService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/bluetooth/MicroBitUARTService.o
SYS_OBJECTS += $(OBJPREFIX)/microbit-dal/source/asm/CortexContextSwitch.o
SYS_OBJECTS += $(OBJPREFIX)/microbit/source/MicroBit.o
SYS_OBJECTS += ../source/lib/abbozzaDevice.o
SYS_OBJECTS += ../source/lib/abbozzaParser.o
SYS_OBJECTS += ../source/lib/abbozzaStringParser.o

INCPREFIX=../yotta_modules

INCLUDE_PATHS += -I.
INCLUDE_PATHS += -I..
INCLUDE_PATHS += -I../source/lib
INCLUDE_PATHS += -I$(INCPREFIX)/microbit/inc
INCLUDE_PATHS += -I$(INCPREFIX)/microbit-dal/inc/bluetooth
INCLUDE_PATHS += -I$(INCPREFIX)/microbit-dal/inc/core
INCLUDE_PATHS += -I$(INCPREFIX)/microbit-dal/inc/drivers
INCLUDE_PATHS += -I$(INCPREFIX)/microbit-dal/inc/platform
INCLUDE_PATHS += -I$(INCPREFIX)/microbit-dal/inc/types
INCLUDE_PATHS += -I$(INCPREFIX)/ble
INCLUDE_PATHS += -I$(INCPREFIX)/.
INCLUDE_PATHS += -I$(INCPREFIX)/mbed-classic/api/
INCLUDE_PATHS += -I$(INCPREFIX)/mbed-classic/hal/
INCLUDE_PATHS += -I$(INCPREFIX)/mbed-classic/targets/cmsis/
INCLUDE_PATHS += -I$(INCPREFIX)/mbed-classic/targets/cmsis/TARGET_NORDIC/TARGET_MCU_NRF51822/
INCLUDE_PATHS += -I$(INCPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/
INCLUDE_PATHS += -I$(INCPREFIX)/mbed-classic/targets/hal/TARGET_NORDIC/TARGET_MCU_NRF51822/TARGET_NRF51_CALLIOPE/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/bootloader_dfu/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/fds/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/util/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/experimental_section_vars/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/hci/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/timer/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/scheduler/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/fstorage/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/crc16/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/common/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/peer_manager/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/device_manager/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/device_manager/config/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/ble_services/ble_dfu/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/ble/ble_radio_notification/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/ble_flash/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/hal/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/pstorage/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/drivers_nrf/pstorage/config/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/softdevice/s130/headers/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/softdevice/s130/headers/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/softdevice/common/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/softdevice/common/softdevice_handler/
INCLUDE_PATHS += -I$(INCPREFIX)/ble-nrf51822/source/
INCLUDE_PATHS += -I$(INCPREFIX)/ble-nrf51822/source/btle/
INCLUDE_PATHS += -I$(INCPREFIX)/nrf51-sdk/source/nordic_sdk/components/libraries/bootloader_dfu/hci_transport/


LIBRARY_PATHS := -L../yotta_modules/mbed-classic/targets/cmsis/TARGET_NORDIC/TARGET_MCU_NRF51822/TOOLCHAIN_GCC_ARM/TARGET_MCU_NRF51_16K_S110/
LIBRARIES :=
LINKER_SCRIPT ?=  ../yotta_targets/calliope-mini-classic-gcc/ld/NRF51822.ld

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = arm-none-eabi-gcc
CC      = arm-none-eabi-gcc
CPP     = arm-none-eabi-g++
LD      = arm-none-eabi-gcc
ELF2BIN = arm-none-eabi-objcopy
PREPROC = arm-none-eabi-cpp -E -P -Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n --specs=nano.specs -mcpu=cortex-m0 -mthumb

SREC_CAT = srec_cat

C_FLAGS += -std=gnu99
C_FLAGS += -include
C_FLAGS += mbed_config.h
C_FLAGS += -DTARGET_MCU_NRF51_16K_S110
C_FLAGS += -D__CORTEX_M0
C_FLAGS += -DDEVICE_ERROR_PATTERN=1
C_FLAGS += -DTARGET_MCU_NRF51_16K_BASE
C_FLAGS += -DNRF51
C_FLAGS += -D__MBED__=1
C_FLAGS += -DTARGET_LIKE_MBED
C_FLAGS += -DTARGET_NRF51822
C_FLAGS += -DDEVICE_PORTINOUT=1
C_FLAGS += -D__MBED_CMSIS_RTOS_CM
C_FLAGS += -DTARGET_NRF51_CALLIOPE
C_FLAGS += -D__CMSIS_RTOS
C_FLAGS += -DTARGET_MCU_NRF51_16K
C_FLAGS += -DTOOLCHAIN_GCC
C_FLAGS += -DTARGET_MCU_NRF51_S110
C_FLAGS += -DTARGET_CORTEX_M
C_FLAGS += -DARM_MATH_CM0
C_FLAGS += -DFEATURE_BLE=1
C_FLAGS += -DTARGET_M0
C_FLAGS += -DTARGET_MCU_NRF51
C_FLAGS += -DDEVICE_SERIAL=1
C_FLAGS += -DDEVICE_INTERRUPTIN=1
C_FLAGS += -DTARGET_CORTEX
C_FLAGS += -DDEVICE_I2C=1
C_FLAGS += -DDEVICE_PORTOUT=1
C_FLAGS += -DTARGET_NRF_LFCLK_RC
C_FLAGS += -DTARGET_RELEASE
C_FLAGS += -DTARGET_NORDIC
C_FLAGS += -DTARGET_MCU_NORDIC_16K
C_FLAGS += -DDEVICE_PORTIN=1
C_FLAGS += -DDEVICE_SLEEP=1
C_FLAGS += -DTOOLCHAIN_GCC_ARM
C_FLAGS += -DTARGET_MCU_NRF51822
C_FLAGS += -DDEVICE_SPI=1
C_FLAGS += -DMBED_BUILD_TIMESTAMP=1543160954.09
C_FLAGS += -DDEVICE_SPISLAVE=1
C_FLAGS += -DDEVICE_ANALOGIN=1
C_FLAGS += -DDEVICE_PWMOUT=1
C_FLAGS += -DTARGET_LIKE_CORTEX_M0
C_FLAGS += -include
C_FLAGS += mbed_config.h
C_FLAGS += -std=gnu99
C_FLAGS += -c
# C_FLAGS += -Wall
# C_FLAGS += -Wextra
# C_FLAGS += -Wno-unused-parameter
# C_FLAGS += -Wno-missing-field-initializers
C_FLAGS += -fmessage-length=0
C_FLAGS += -fno-exceptions
C_FLAGS += -fno-builtin
C_FLAGS += -ffunction-sections
C_FLAGS += -fdata-sections
C_FLAGS += -funsigned-char
C_FLAGS += -MMD
C_FLAGS += -fno-delete-null-pointer-checks
C_FLAGS += -fomit-frame-pointer
C_FLAGS += -Os
C_FLAGS += -g
C_FLAGS += -DMBED_RTOS_SINGLE_THREAD
C_FLAGS += -mcpu=cortex-m0
C_FLAGS += -mthumb
C_FLAGS += -DNDEBUG
C_FLAGS += -w

CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h
CXX_FLAGS += -DTARGET_MCU_NRF51_16K_S110
CXX_FLAGS += -D__CORTEX_M0
CXX_FLAGS += -DDEVICE_ERROR_PATTERN=1
CXX_FLAGS += -DTARGET_MCU_NRF51_16K_BASE
CXX_FLAGS += -DNRF51
CXX_FLAGS += -D__MBED__=1
CXX_FLAGS += -DTARGET_LIKE_MBED
CXX_FLAGS += -DTARGET_NRF51822
CXX_FLAGS += -DDEVICE_PORTINOUT=1
CXX_FLAGS += -D__MBED_CMSIS_RTOS_CM
CXX_FLAGS += -DTARGET_NRF51_CALLIOPE
CXX_FLAGS += -D__CMSIS_RTOS
CXX_FLAGS += -DTARGET_MCU_NRF51_16K
CXX_FLAGS += -DTOOLCHAIN_GCC
CXX_FLAGS += -DTARGET_MCU_NRF51_S110
CXX_FLAGS += -DTARGET_CORTEX_M
CXX_FLAGS += -DARM_MATH_CM0
CXX_FLAGS += -DFEATURE_BLE=1
CXX_FLAGS += -DTARGET_M0
CXX_FLAGS += -DTARGET_MCU_NRF51
CXX_FLAGS += -DDEVICE_SERIAL=1
CXX_FLAGS += -DDEVICE_INTERRUPTIN=1
CXX_FLAGS += -DTARGET_CORTEX
CXX_FLAGS += -DDEVICE_I2C=1
CXX_FLAGS += -DDEVICE_PORTOUT=1
CXX_FLAGS += -DTARGET_NRF_LFCLK_RC
CXX_FLAGS += -DTARGET_RELEASE
CXX_FLAGS += -DTARGET_NORDIC
CXX_FLAGS += -DTARGET_MCU_NORDIC_16K
CXX_FLAGS += -DDEVICE_PORTIN=1
CXX_FLAGS += -DDEVICE_SLEEP=1
CXX_FLAGS += -DTOOLCHAIN_GCC_ARM
CXX_FLAGS += -DTARGET_MCU_NRF51822
CXX_FLAGS += -DDEVICE_SPI=1
CXX_FLAGS += -DMBED_BUILD_TIMESTAMP=1543160954.09
CXX_FLAGS += -DDEVICE_SPISLAVE=1
CXX_FLAGS += -DDEVICE_ANALOGIN=1
CXX_FLAGS += -DDEVICE_PWMOUT=1
CXX_FLAGS += -DTARGET_LIKE_CORTEX_M0
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h
CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -c
CXX_FLAGS += -w
# CXX_FLAGS += -Wall
# CXX_FLAGS += -Wextra
# CXX_FLAGS += -Wno-unused-parameter
# CXX_FLAGS += -Wno-missing-field-initializers
CXX_FLAGS += -fmessage-length=0
CXX_FLAGS += -fno-exceptions
CXX_FLAGS += -fno-builtin
CXX_FLAGS += -ffunction-sections
CXX_FLAGS += -fdata-sections
CXX_FLAGS += -funsigned-char
CXX_FLAGS += -MMD
CXX_FLAGS += -fno-delete-null-pointer-checks
CXX_FLAGS += -fomit-frame-pointer
CXX_FLAGS += -Os
CXX_FLAGS += -g
CXX_FLAGS += -DMBED_RTOS_SINGLE_THREAD
CXX_FLAGS += -mcpu=cortex-m0
CXX_FLAGS += -mthumb
CXX_FLAGS += -DNDEBUG

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -D__CORTEX_M0
ASM_FLAGS += -DTARGET_MCU_NRF51_16K_S110
ASM_FLAGS += -DTARGET_MCU_NRF51_16K
ASM_FLAGS += -DTARGET_NRF_LFCLK_RC
ASM_FLAGS += -DNRF51
ASM_FLAGS += -DTARGET_NRF51822
ASM_FLAGS += -DARM_MATH_CM0
ASM_FLAGS += -D__MBED_CMSIS_RTOS_CM
ASM_FLAGS += -D__CMSIS_RTOS
ASM_FLAGS += -DTARGET_MCU_NORDIC_16K
ASM_FLAGS += -I.
ASM_FLAGS += -I..
ASM_FLAGS += -I$(INCPREFIX)/.
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nordic_sdk
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nordic_sdk/components
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nordic_sdk/components/libraries
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nordic_sdk/components/libraries/crc16
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nordic_sdk/components/libraries/scheduler
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/nordic_sdk/components/libraries/util
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/TARGET_NRF51_MICROBIT
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/TARGET_NRF51_MICROBIT/TARGET_NORDIC/TARGET_MCU_NRF51822/device
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/drivers
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/hal
ASM_FLAGS += -I$(INCPREFIX)/mbed-classic/platform
ASM_FLAGS += -include
ASM_FLAGS += mbed_config.h
ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -c
ASM_FLAGS += -w
# ASM_FLAGS += -Wall
# ASM_FLAGS += -Wextra
# ASM_FLAGS += -Wno-unused-parameter
# ASM_FLAGS += -Wno-missing-field-initializers
ASM_FLAGS += -fmessage-length=0
ASM_FLAGS += -fno-exceptions
ASM_FLAGS += -fno-builtin
ASM_FLAGS += -ffunction-sections
ASM_FLAGS += -fdata-sections
ASM_FLAGS += -funsigned-char
ASM_FLAGS += -MMD
ASM_FLAGS += -fno-delete-null-pointer-checks
ASM_FLAGS += -fomit-frame-pointer
ASM_FLAGS += -Os
ASM_FLAGS += -g
ASM_FLAGS += -DMBED_RTOS_SINGLE_THREAD
ASM_FLAGS += -mcpu=cortex-m0
ASM_FLAGS += -mthumb
ASM_FLAGS += -DNDEBUG

ifeq ($(BLUETOOTH),1)
  C_FLAGS += -D MICROBIT_BLE_ENABLED=1
  CXX_FLAGS += -D MICROBIT_BLE_ENABLED=1
  ASM_FLAGS += -D MICROBIT_BLE_ENABLED=1
else
  C_FLAGS += -D MICROBIT_BLE_ENABLED=0
  CXX_FLAGS += -D MICROBIT_BLE_ENABLED=0
  ASM_FLAGS += -D MICROBIT_BLE_ENABLED=0
endif

LD_FLAGS :=-Wl,--gc-sections  -Wl,-n --specs=nano.specs -mcpu=cortex-m0 -mthumb
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys -Wl,--end-group

# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size

all: $(PROJECT).bin $(PROJECT)-combined.hex size

.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"

	@$(AS) -c $(ASM_FLAGS) -o $@ $<



.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) -o $@ $<


.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter-out %.o, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@


$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@

$(PROJECT)-combined.hex: $(PROJECT).hex
#	 +@echo "NOTE: the $(SREC_CAT) binary is required to be present in your PATH. Please see http://srecord.sourceforge.net/ for more information."
	$(SREC_CAT) ../yotta_targets/calliope-mini-classic-gcc/bootloader/BLE_BOOTLOADER_RESERVED.hex -intel ../yotta_targets/calliope-mini-classic-gcc/softdevice/s110_nrf51822_8.0.0_softdevice.hex -intel abbozza.hex -intel -o abbozza-combined.hex -intel --line-length=44
	+@echo "===== hex file ready to flash: $(OBJDIR)/$@ ====="


# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
